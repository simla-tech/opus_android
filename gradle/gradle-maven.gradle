apply plugin: "maven-publish"
apply plugin: "signing"

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.simla.android.opuslib'
            
            afterEvaluate {
                from components.release
            }
            artifactId = project.name

            pom {
                name.set("OpusLib")
                description.set("Re-publishing of OpusLib with no additional functionality.")
                url.set("https://github.com/simla-tech/opus_android")



                licenses {
                    license {
                        name.set("The Apache License, Version 2.0")
                        url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                        distribution.set("repo")
                    }
                }

                developers {
                    developer {
                        id.set("SimlaTech")
                        name.set("Simla Mobile Dev Team")
                        email.set(System.getenv("SIMLA_TECH_EMAIL"))
                    }
                }

                scm {
                    url.set("https://github.com/simla-tech/opus_android")
                    connection.set("scm:git:git://github.com/simla-tech/opus_android.git")
                    developerConnection.set("scm:git:ssh://github.com/simla-tech/opus_android.git")
                }
            }
        }
    }

    repositories {
        // локальный репозиторий
        // собранный артефакт надо будет скачать и загрузить в maven central repository (https://central.sonatype.com/publishing)
        // документация: https://central.sonatype.org/publish/publish-portal-upload/
        maven {
            name = "localRepo"
            url = uri(layout.buildDirectory.dir("repo"))
        }
    }
}

signing {
    def signingKeyId = findProperty("signingKeyId") ?: System.getenv("SIGNING_KEY_ID")
    def signingKey = findProperty("signingKey") ?: System.getenv("SIGNING_KEY")
    def signingPassword = findProperty("signingKeyPassword") ?: System.getenv("SIGNING_KEY_PASSWORD")
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    sign publishing.publications.release
}